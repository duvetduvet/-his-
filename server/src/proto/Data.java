package proto;// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data.proto

public final class Data
{
    private Data()
    {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistryLite registry)
    {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistry registry)
    {
        registerAllExtensions(
                (com.google.protobuf.ExtensionRegistryLite) registry);
    }

    public interface positionOrBuilder extends
            // @@protoc_insertion_point(interface_extends:position)
            com.google.protobuf.MessageOrBuilder
    {

        /**
         * <code>int32 id = 1;</code>
         */
        int getId();

        /**
         * <code>string name = 2;</code>
         */
        String getName();

        /**
         * <code>string name = 2;</code>
         */
        com.google.protobuf.ByteString
        getNameBytes();

        /**
         * <code>string power = 3;</code>
         */
        String getPower();

        /**
         * <code>string power = 3;</code>
         */
        com.google.protobuf.ByteString
        getPowerBytes();
    }

    /**
     * Protobuf type {@code position}
     */
    public static final class position extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:position)
            positionOrBuilder
    {
        private static final long serialVersionUID = 0L;

        // Use position.newBuilder() to construct.
        private position(com.google.protobuf.GeneratedMessageV3.Builder<?> builder)
        {
            super(builder);
        }

        private position()
        {
            id_ = 0;
            name_ = "";
            power_ = "";
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields()
        {
            return this.unknownFields;
        }

        private position(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException
        {
            this();
            if (extensionRegistry == null)
            {
                throw new NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try
            {
                boolean done = false;
                while (!done)
                {
                    int tag = input.readTag();
                    switch (tag)
                    {
                        case 0:
                            done = true;
                            break;
                        default:
                        {
                            if (!parseUnknownFieldProto3(
                                    input, unknownFields, extensionRegistry, tag))
                            {
                                done = true;
                            }
                            break;
                        }
                        case 8:
                        {

                            id_ = input.readInt32();
                            break;
                        }
                        case 18:
                        {
                            String s = input.readStringRequireUtf8();

                            name_ = s;
                            break;
                        }
                        case 26:
                        {
                            String s = input.readStringRequireUtf8();

                            power_ = s;
                            break;
                        }
                    }
                }
            }
            catch (com.google.protobuf.InvalidProtocolBufferException e)
            {
                throw e.setUnfinishedMessage(this);
            }
            catch (java.io.IOException e)
            {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            }
            finally
            {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor()
        {
            return Data.internal_static_position_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable()
        {
            return Data.internal_static_position_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            Data.position.class, Data.position.Builder.class);
        }

        public static final int ID_FIELD_NUMBER = 1;
        private int id_;

        /**
         * <code>int32 id = 1;</code>
         */
        public int getId()
        {
            return id_;
        }

        public static final int NAME_FIELD_NUMBER = 2;
        private volatile Object name_;

        /**
         * <code>string name = 2;</code>
         */
        public String getName()
        {
            Object ref = name_;
            if (ref instanceof String)
            {
                return (String) ref;
            }
            else
            {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                name_ = s;
                return s;
            }
        }

        /**
         * <code>string name = 2;</code>
         */
        public com.google.protobuf.ByteString
        getNameBytes()
        {
            Object ref = name_;
            if (ref instanceof String)
            {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                name_ = b;
                return b;
            }
            else
            {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int POWER_FIELD_NUMBER = 3;
        private volatile Object power_;

        /**
         * <code>string power = 3;</code>
         */
        public String getPower()
        {
            Object ref = power_;
            if (ref instanceof String)
            {
                return (String) ref;
            }
            else
            {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                power_ = s;
                return s;
            }
        }

        /**
         * <code>string power = 3;</code>
         */
        public com.google.protobuf.ByteString
        getPowerBytes()
        {
            Object ref = power_;
            if (ref instanceof String)
            {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                power_ = b;
                return b;
            }
            else
            {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized()
        {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException
        {
            if (id_ != 0)
            {
                output.writeInt32(1, id_);
            }
            if (!getNameBytes().isEmpty())
            {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
            }
            if (!getPowerBytes().isEmpty())
            {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 3, power_);
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize()
        {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (id_ != 0)
            {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt32Size(1, id_);
            }
            if (!getNameBytes().isEmpty())
            {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
            }
            if (!getPowerBytes().isEmpty())
            {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, power_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @Override
        public boolean equals(final Object obj)
        {
            if (obj == this)
            {
                return true;
            }
            if (!(obj instanceof Data.position))
            {
                return super.equals(obj);
            }
            Data.position other = (Data.position) obj;

            boolean result = true;
            result = result && (getId()
                    == other.getId());
            result = result && getName()
                    .equals(other.getName());
            result = result && getPower()
                    .equals(other.getPower());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @Override
        public int hashCode()
        {
            if (memoizedHashCode != 0)
            {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + ID_FIELD_NUMBER;
            hash = (53 * hash) + getId();
            hash = (37 * hash) + NAME_FIELD_NUMBER;
            hash = (53 * hash) + getName().hashCode();
            hash = (37 * hash) + POWER_FIELD_NUMBER;
            hash = (53 * hash) + getPower().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static Data.position parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException
        {
            return PARSER.parseFrom(data);
        }

        public static Data.position parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException
        {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Data.position parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException
        {
            return PARSER.parseFrom(data);
        }

        public static Data.position parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException
        {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Data.position parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException
        {
            return PARSER.parseFrom(data);
        }

        public static Data.position parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException
        {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Data.position parseFrom(java.io.InputStream input)
                throws java.io.IOException
        {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Data.position parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException
        {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Data.position parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException
        {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static Data.position parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException
        {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static Data.position parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException
        {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Data.position parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException
        {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType()
        {
            return newBuilder();
        }

        public static Builder newBuilder()
        {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(Data.position prototype)
        {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder()
        {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent)
        {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * Protobuf type {@code position}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:position)
                Data.positionOrBuilder
        {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor()
            {
                return Data.internal_static_position_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable()
            {
                return Data.internal_static_position_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                Data.position.class, Data.position.Builder.class);
            }

            // Construct using Data.position.newBuilder()
            private Builder()
            {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent)
            {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization()
            {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders)
                {
                }
            }

            public Builder clear()
            {
                super.clear();
                id_ = 0;

                name_ = "";

                power_ = "";

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType()
            {
                return Data.internal_static_position_descriptor;
            }

            public Data.position getDefaultInstanceForType()
            {
                return Data.position.getDefaultInstance();
            }

            public Data.position build()
            {
                Data.position result = buildPartial();
                if (!result.isInitialized())
                {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public Data.position buildPartial()
            {
                Data.position result = new Data.position(this);
                result.id_ = id_;
                result.name_ = name_;
                result.power_ = power_;
                onBuilt();
                return result;
            }

            public Builder clone()
            {
                return (Builder) super.clone();
            }

            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value)
            {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field)
            {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof)
            {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value)
            {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value)
            {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other)
            {
                if (other instanceof Data.position)
                {
                    return mergeFrom((Data.position) other);
                }
                else
                {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(Data.position other)
            {
                if (other == Data.position.getDefaultInstance()) return this;
                if (other.getId() != 0)
                {
                    setId(other.getId());
                }
                if (!other.getName().isEmpty())
                {
                    name_ = other.name_;
                    onChanged();
                }
                if (!other.getPower().isEmpty())
                {
                    power_ = other.power_;
                    onChanged();
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized()
            {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException
            {
                Data.position parsedMessage = null;
                try
                {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                }
                catch (com.google.protobuf.InvalidProtocolBufferException e)
                {
                    parsedMessage = (Data.position) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                }
                finally
                {
                    if (parsedMessage != null)
                    {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int id_;

            /**
             * <code>int32 id = 1;</code>
             */
            public int getId()
            {
                return id_;
            }

            /**
             * <code>int32 id = 1;</code>
             */
            public Builder setId(int value)
            {

                id_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>int32 id = 1;</code>
             */
            public Builder clearId()
            {

                id_ = 0;
                onChanged();
                return this;
            }

            private Object name_ = "";

            /**
             * <code>string name = 2;</code>
             */
            public String getName()
            {
                Object ref = name_;
                if (!(ref instanceof String))
                {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    name_ = s;
                    return s;
                }
                else
                {
                    return (String) ref;
                }
            }

            /**
             * <code>string name = 2;</code>
             */
            public com.google.protobuf.ByteString
            getNameBytes()
            {
                Object ref = name_;
                if (ref instanceof String)
                {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    name_ = b;
                    return b;
                }
                else
                {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>string name = 2;</code>
             */
            public Builder setName(
                    String value)
            {
                if (value == null)
                {
                    throw new NullPointerException();
                }

                name_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string name = 2;</code>
             */
            public Builder clearName()
            {

                name_ = getDefaultInstance().getName();
                onChanged();
                return this;
            }

            /**
             * <code>string name = 2;</code>
             */
            public Builder setNameBytes(
                    com.google.protobuf.ByteString value)
            {
                if (value == null)
                {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                name_ = value;
                onChanged();
                return this;
            }

            private Object power_ = "";

            /**
             * <code>string power = 3;</code>
             */
            public String getPower()
            {
                Object ref = power_;
                if (!(ref instanceof String))
                {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    power_ = s;
                    return s;
                }
                else
                {
                    return (String) ref;
                }
            }

            /**
             * <code>string power = 3;</code>
             */
            public com.google.protobuf.ByteString
            getPowerBytes()
            {
                Object ref = power_;
                if (ref instanceof String)
                {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    power_ = b;
                    return b;
                }
                else
                {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>string power = 3;</code>
             */
            public Builder setPower(
                    String value)
            {
                if (value == null)
                {
                    throw new NullPointerException();
                }

                power_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>string power = 3;</code>
             */
            public Builder clearPower()
            {

                power_ = getDefaultInstance().getPower();
                onChanged();
                return this;
            }

            /**
             * <code>string power = 3;</code>
             */
            public Builder setPowerBytes(
                    com.google.protobuf.ByteString value)
            {
                if (value == null)
                {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                power_ = value;
                onChanged();
                return this;
            }

            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields)
            {
                return super.setUnknownFieldsProto3(unknownFields);
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields)
            {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:position)
        }

        // @@protoc_insertion_point(class_scope:position)
        private static final Data.position DEFAULT_INSTANCE;

        static
        {
            DEFAULT_INSTANCE = new Data.position();
        }

        public static Data.position getDefaultInstance()
        {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<position>
                PARSER = new com.google.protobuf.AbstractParser<position>()
        {
            public position parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException
            {
                return new position(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<position> parser()
        {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<position> getParserForType()
        {
            return PARSER;
        }

        public Data.position getDefaultInstanceForType()
        {
            return DEFAULT_INSTANCE;
        }

    }

    public interface commonOrBuilder extends
            // @@protoc_insertion_point(interface_extends:common)
            com.google.protobuf.MessageOrBuilder
    {

        /**
         * <code>map&lt;string, int32&gt; Int = 1;</code>
         */
        int getIntCount();

        /**
         * <code>map&lt;string, int32&gt; Int = 1;</code>
         */
        boolean containsInt(
                String key);

        /**
         * Use {@link #getIntMap()} instead.
         */
        @Deprecated
        java.util.Map<String, Integer>
        getInt();

        /**
         * <code>map&lt;string, int32&gt; Int = 1;</code>
         */
        java.util.Map<String, Integer>
        getIntMap();

        /**
         * <code>map&lt;string, int32&gt; Int = 1;</code>
         */

        int getIntOrDefault(
                String key,
                int defaultValue);

        /**
         * <code>map&lt;string, int32&gt; Int = 1;</code>
         */

        int getIntOrThrow(
                String key);

        /**
         * <code>map&lt;string, string&gt; Str = 2;</code>
         */
        int getStrCount();

        /**
         * <code>map&lt;string, string&gt; Str = 2;</code>
         */
        boolean containsStr(
                String key);

        /**
         * Use {@link #getStrMap()} instead.
         */
        @Deprecated
        java.util.Map<String, String>
        getStr();

        /**
         * <code>map&lt;string, string&gt; Str = 2;</code>
         */
        java.util.Map<String, String>
        getStrMap();

        /**
         * <code>map&lt;string, string&gt; Str = 2;</code>
         */

        String getStrOrDefault(
                String key,
                String defaultValue);

        /**
         * <code>map&lt;string, string&gt; Str = 2;</code>
         */

        String getStrOrThrow(
                String key);

        /**
         * <code>map&lt;string, double&gt; Dou = 3;</code>
         */
        int getDouCount();

        /**
         * <code>map&lt;string, double&gt; Dou = 3;</code>
         */
        boolean containsDou(
                String key);

        /**
         * Use {@link #getDouMap()} instead.
         */
        @Deprecated
        java.util.Map<String, Double>
        getDou();

        /**
         * <code>map&lt;string, double&gt; Dou = 3;</code>
         */
        java.util.Map<String, Double>
        getDouMap();

        /**
         * <code>map&lt;string, double&gt; Dou = 3;</code>
         */

        double getDouOrDefault(
                String key,
                double defaultValue);

        /**
         * <code>map&lt;string, double&gt; Dou = 3;</code>
         */

        double getDouOrThrow(
                String key);

        /**
         * <code>map&lt;string, float&gt; Flo = 4;</code>
         */
        int getFloCount();

        /**
         * <code>map&lt;string, float&gt; Flo = 4;</code>
         */
        boolean containsFlo(
                String key);

        /**
         * Use {@link #getFloMap()} instead.
         */
        @Deprecated
        java.util.Map<String, Float>
        getFlo();

        /**
         * <code>map&lt;string, float&gt; Flo = 4;</code>
         */
        java.util.Map<String, Float>
        getFloMap();

        /**
         * <code>map&lt;string, float&gt; Flo = 4;</code>
         */

        float getFloOrDefault(
                String key,
                float defaultValue);

        /**
         * <code>map&lt;string, float&gt; Flo = 4;</code>
         */

        float getFloOrThrow(
                String key);
    }

    /**
     * Protobuf type {@code common}
     */
    public static final class common extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:common)
            commonOrBuilder
    {
        private static final long serialVersionUID = 0L;

        // Use common.newBuilder() to construct.
        private common(com.google.protobuf.GeneratedMessageV3.Builder<?> builder)
        {
            super(builder);
        }

        private common()
        {
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields()
        {
            return this.unknownFields;
        }

        private common(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException
        {
            this();
            if (extensionRegistry == null)
            {
                throw new NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try
            {
                boolean done = false;
                while (!done)
                {
                    int tag = input.readTag();
                    switch (tag)
                    {
                        case 0:
                            done = true;
                            break;
                        default:
                        {
                            if (!parseUnknownFieldProto3(
                                    input, unknownFields, extensionRegistry, tag))
                            {
                                done = true;
                            }
                            break;
                        }
                        case 10:
                        {
                            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001))
                            {
                                int_ = com.google.protobuf.MapField.newMapField(
                                        IntDefaultEntryHolder.defaultEntry);
                                mutable_bitField0_ |= 0x00000001;
                            }
                            com.google.protobuf.MapEntry<String, Integer>
                                    int__ = input.readMessage(
                                    IntDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                            int_.getMutableMap().put(
                                    int__.getKey(), int__.getValue());
                            break;
                        }
                        case 18:
                        {
                            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002))
                            {
                                str_ = com.google.protobuf.MapField.newMapField(
                                        StrDefaultEntryHolder.defaultEntry);
                                mutable_bitField0_ |= 0x00000002;
                            }
                            com.google.protobuf.MapEntry<String, String>
                                    str__ = input.readMessage(
                                    StrDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                            str_.getMutableMap().put(
                                    str__.getKey(), str__.getValue());
                            break;
                        }
                        case 26:
                        {
                            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004))
                            {
                                dou_ = com.google.protobuf.MapField.newMapField(
                                        DouDefaultEntryHolder.defaultEntry);
                                mutable_bitField0_ |= 0x00000004;
                            }
                            com.google.protobuf.MapEntry<String, Double>
                                    dou__ = input.readMessage(
                                    DouDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                            dou_.getMutableMap().put(
                                    dou__.getKey(), dou__.getValue());
                            break;
                        }
                        case 34:
                        {
                            if (!((mutable_bitField0_ & 0x00000008) == 0x00000008))
                            {
                                flo_ = com.google.protobuf.MapField.newMapField(
                                        FloDefaultEntryHolder.defaultEntry);
                                mutable_bitField0_ |= 0x00000008;
                            }
                            com.google.protobuf.MapEntry<String, Float>
                                    flo__ = input.readMessage(
                                    FloDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                            flo_.getMutableMap().put(
                                    flo__.getKey(), flo__.getValue());
                            break;
                        }
                    }
                }
            }
            catch (com.google.protobuf.InvalidProtocolBufferException e)
            {
                throw e.setUnfinishedMessage(this);
            }
            catch (java.io.IOException e)
            {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            }
            finally
            {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor()
        {
            return Data.internal_static_common_descriptor;
        }

        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMapField(
                int number)
        {
            switch (number)
            {
                case 1:
                    return internalGetInt();
                case 2:
                    return internalGetStr();
                case 3:
                    return internalGetDou();
                case 4:
                    return internalGetFlo();
                default:
                    throw new RuntimeException(
                            "Invalid map field number: " + number);
            }
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable()
        {
            return Data.internal_static_common_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            Data.common.class, Data.common.Builder.class);
        }

        public static final int INT_FIELD_NUMBER = 1;

        private static final class IntDefaultEntryHolder
        {
            static final com.google.protobuf.MapEntry<
                    String, Integer> defaultEntry =
                    com.google.protobuf.MapEntry
                            .<String, Integer>newDefaultInstance(
                                    Data.internal_static_common_IntEntry_descriptor,
                                    com.google.protobuf.WireFormat.FieldType.STRING,
                                    "",
                                    com.google.protobuf.WireFormat.FieldType.INT32,
                                    0);
        }

        private com.google.protobuf.MapField<
                String, Integer> int_;

        private com.google.protobuf.MapField<String, Integer>
        internalGetInt()
        {
            if (int_ == null)
            {
                return com.google.protobuf.MapField.emptyMapField(
                        IntDefaultEntryHolder.defaultEntry);
            }
            return int_;
        }

        public int getIntCount()
        {
            return internalGetInt().getMap().size();
        }

        /**
         * <code>map&lt;string, int32&gt; Int = 1;</code>
         */

        public boolean containsInt(
                String key)
        {
            if (key == null)
            {
                throw new NullPointerException();
            }
            return internalGetInt().getMap().containsKey(key);
        }

        /**
         * Use {@link #getIntMap()} instead.
         */
        @Deprecated
        public java.util.Map<String, Integer> getInt()
        {
            return getIntMap();
        }

        /**
         * <code>map&lt;string, int32&gt; Int = 1;</code>
         */

        public java.util.Map<String, Integer> getIntMap()
        {
            return internalGetInt().getMap();
        }

        /**
         * <code>map&lt;string, int32&gt; Int = 1;</code>
         */

        public int getIntOrDefault(
                String key,
                int defaultValue)
        {
            if (key == null)
            {
                throw new NullPointerException();
            }
            java.util.Map<String, Integer> map =
                    internalGetInt().getMap();
            return map.containsKey(key) ? map.get(key) : defaultValue;
        }

        /**
         * <code>map&lt;string, int32&gt; Int = 1;</code>
         */

        public int getIntOrThrow(
                String key)
        {
            if (key == null)
            {
                throw new NullPointerException();
            }
            java.util.Map<String, Integer> map =
                    internalGetInt().getMap();
            if (!map.containsKey(key))
            {
                throw new IllegalArgumentException();
            }
            return map.get(key);
        }

        public static final int STR_FIELD_NUMBER = 2;

        private static final class StrDefaultEntryHolder
        {
            static final com.google.protobuf.MapEntry<
                    String, String> defaultEntry =
                    com.google.protobuf.MapEntry
                            .<String, String>newDefaultInstance(
                                    Data.internal_static_common_StrEntry_descriptor,
                                    com.google.protobuf.WireFormat.FieldType.STRING,
                                    "",
                                    com.google.protobuf.WireFormat.FieldType.STRING,
                                    "");
        }

        private com.google.protobuf.MapField<
                String, String> str_;

        private com.google.protobuf.MapField<String, String>
        internalGetStr()
        {
            if (str_ == null)
            {
                return com.google.protobuf.MapField.emptyMapField(
                        StrDefaultEntryHolder.defaultEntry);
            }
            return str_;
        }

        public int getStrCount()
        {
            return internalGetStr().getMap().size();
        }

        /**
         * <code>map&lt;string, string&gt; Str = 2;</code>
         */

        public boolean containsStr(
                String key)
        {
            if (key == null)
            {
                throw new NullPointerException();
            }
            return internalGetStr().getMap().containsKey(key);
        }

        /**
         * Use {@link #getStrMap()} instead.
         */
        @Deprecated
        public java.util.Map<String, String> getStr()
        {
            return getStrMap();
        }

        /**
         * <code>map&lt;string, string&gt; Str = 2;</code>
         */

        public java.util.Map<String, String> getStrMap()
        {
            return internalGetStr().getMap();
        }

        /**
         * <code>map&lt;string, string&gt; Str = 2;</code>
         */

        public String getStrOrDefault(
                String key,
                String defaultValue)
        {
            if (key == null)
            {
                throw new NullPointerException();
            }
            java.util.Map<String, String> map =
                    internalGetStr().getMap();
            return map.containsKey(key) ? map.get(key) : defaultValue;
        }

        /**
         * <code>map&lt;string, string&gt; Str = 2;</code>
         */

        public String getStrOrThrow(
                String key)
        {
            if (key == null)
            {
                throw new NullPointerException();
            }
            java.util.Map<String, String> map =
                    internalGetStr().getMap();
            if (!map.containsKey(key))
            {
                throw new IllegalArgumentException();
            }
            return map.get(key);
        }

        public static final int DOU_FIELD_NUMBER = 3;

        private static final class DouDefaultEntryHolder
        {
            static final com.google.protobuf.MapEntry<
                    String, Double> defaultEntry =
                    com.google.protobuf.MapEntry
                            .<String, Double>newDefaultInstance(
                                    Data.internal_static_common_DouEntry_descriptor,
                                    com.google.protobuf.WireFormat.FieldType.STRING,
                                    "",
                                    com.google.protobuf.WireFormat.FieldType.DOUBLE,
                                    0D);
        }

        private com.google.protobuf.MapField<
                String, Double> dou_;

        private com.google.protobuf.MapField<String, Double>
        internalGetDou()
        {
            if (dou_ == null)
            {
                return com.google.protobuf.MapField.emptyMapField(
                        DouDefaultEntryHolder.defaultEntry);
            }
            return dou_;
        }

        public int getDouCount()
        {
            return internalGetDou().getMap().size();
        }

        /**
         * <code>map&lt;string, double&gt; Dou = 3;</code>
         */

        public boolean containsDou(
                String key)
        {
            if (key == null)
            {
                throw new NullPointerException();
            }
            return internalGetDou().getMap().containsKey(key);
        }

        /**
         * Use {@link #getDouMap()} instead.
         */
        @Deprecated
        public java.util.Map<String, Double> getDou()
        {
            return getDouMap();
        }

        /**
         * <code>map&lt;string, double&gt; Dou = 3;</code>
         */

        public java.util.Map<String, Double> getDouMap()
        {
            return internalGetDou().getMap();
        }

        /**
         * <code>map&lt;string, double&gt; Dou = 3;</code>
         */

        public double getDouOrDefault(
                String key,
                double defaultValue)
        {
            if (key == null)
            {
                throw new NullPointerException();
            }
            java.util.Map<String, Double> map =
                    internalGetDou().getMap();
            return map.containsKey(key) ? map.get(key) : defaultValue;
        }

        /**
         * <code>map&lt;string, double&gt; Dou = 3;</code>
         */

        public double getDouOrThrow(
                String key)
        {
            if (key == null)
            {
                throw new NullPointerException();
            }
            java.util.Map<String, Double> map =
                    internalGetDou().getMap();
            if (!map.containsKey(key))
            {
                throw new IllegalArgumentException();
            }
            return map.get(key);
        }

        public static final int FLO_FIELD_NUMBER = 4;

        private static final class FloDefaultEntryHolder
        {
            static final com.google.protobuf.MapEntry<
                    String, Float> defaultEntry =
                    com.google.protobuf.MapEntry
                            .<String, Float>newDefaultInstance(
                                    Data.internal_static_common_FloEntry_descriptor,
                                    com.google.protobuf.WireFormat.FieldType.STRING,
                                    "",
                                    com.google.protobuf.WireFormat.FieldType.FLOAT,
                                    0F);
        }

        private com.google.protobuf.MapField<
                String, Float> flo_;

        private com.google.protobuf.MapField<String, Float>
        internalGetFlo()
        {
            if (flo_ == null)
            {
                return com.google.protobuf.MapField.emptyMapField(
                        FloDefaultEntryHolder.defaultEntry);
            }
            return flo_;
        }

        public int getFloCount()
        {
            return internalGetFlo().getMap().size();
        }

        /**
         * <code>map&lt;string, float&gt; Flo = 4;</code>
         */

        public boolean containsFlo(
                String key)
        {
            if (key == null)
            {
                throw new NullPointerException();
            }
            return internalGetFlo().getMap().containsKey(key);
        }

        /**
         * Use {@link #getFloMap()} instead.
         */
        @Deprecated
        public java.util.Map<String, Float> getFlo()
        {
            return getFloMap();
        }

        /**
         * <code>map&lt;string, float&gt; Flo = 4;</code>
         */

        public java.util.Map<String, Float> getFloMap()
        {
            return internalGetFlo().getMap();
        }

        /**
         * <code>map&lt;string, float&gt; Flo = 4;</code>
         */

        public float getFloOrDefault(
                String key,
                float defaultValue)
        {
            if (key == null)
            {
                throw new NullPointerException();
            }
            java.util.Map<String, Float> map =
                    internalGetFlo().getMap();
            return map.containsKey(key) ? map.get(key) : defaultValue;
        }

        /**
         * <code>map&lt;string, float&gt; Flo = 4;</code>
         */

        public float getFloOrThrow(
                String key)
        {
            if (key == null)
            {
                throw new NullPointerException();
            }
            java.util.Map<String, Float> map =
                    internalGetFlo().getMap();
            if (!map.containsKey(key))
            {
                throw new IllegalArgumentException();
            }
            return map.get(key);
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized()
        {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException
        {
            com.google.protobuf.GeneratedMessageV3
                    .serializeStringMapTo(
                            output,
                            internalGetInt(),
                            IntDefaultEntryHolder.defaultEntry,
                            1);
            com.google.protobuf.GeneratedMessageV3
                    .serializeStringMapTo(
                            output,
                            internalGetStr(),
                            StrDefaultEntryHolder.defaultEntry,
                            2);
            com.google.protobuf.GeneratedMessageV3
                    .serializeStringMapTo(
                            output,
                            internalGetDou(),
                            DouDefaultEntryHolder.defaultEntry,
                            3);
            com.google.protobuf.GeneratedMessageV3
                    .serializeStringMapTo(
                            output,
                            internalGetFlo(),
                            FloDefaultEntryHolder.defaultEntry,
                            4);
            unknownFields.writeTo(output);
        }

        public int getSerializedSize()
        {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            for (java.util.Map.Entry<String, Integer> entry
                    : internalGetInt().getMap().entrySet())
            {
                com.google.protobuf.MapEntry<String, Integer>
                        int__ = IntDefaultEntryHolder.defaultEntry.newBuilderForType()
                        .setKey(entry.getKey())
                        .setValue(entry.getValue())
                        .build();
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, int__);
            }
            for (java.util.Map.Entry<String, String> entry
                    : internalGetStr().getMap().entrySet())
            {
                com.google.protobuf.MapEntry<String, String>
                        str__ = StrDefaultEntryHolder.defaultEntry.newBuilderForType()
                        .setKey(entry.getKey())
                        .setValue(entry.getValue())
                        .build();
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(2, str__);
            }
            for (java.util.Map.Entry<String, Double> entry
                    : internalGetDou().getMap().entrySet())
            {
                com.google.protobuf.MapEntry<String, Double>
                        dou__ = DouDefaultEntryHolder.defaultEntry.newBuilderForType()
                        .setKey(entry.getKey())
                        .setValue(entry.getValue())
                        .build();
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(3, dou__);
            }
            for (java.util.Map.Entry<String, Float> entry
                    : internalGetFlo().getMap().entrySet())
            {
                com.google.protobuf.MapEntry<String, Float>
                        flo__ = FloDefaultEntryHolder.defaultEntry.newBuilderForType()
                        .setKey(entry.getKey())
                        .setValue(entry.getValue())
                        .build();
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(4, flo__);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @Override
        public boolean equals(final Object obj)
        {
            if (obj == this)
            {
                return true;
            }
            if (!(obj instanceof Data.common))
            {
                return super.equals(obj);
            }
            Data.common other = (Data.common) obj;

            boolean result = true;
            result = result && internalGetInt().equals(
                    other.internalGetInt());
            result = result && internalGetStr().equals(
                    other.internalGetStr());
            result = result && internalGetDou().equals(
                    other.internalGetDou());
            result = result && internalGetFlo().equals(
                    other.internalGetFlo());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @Override
        public int hashCode()
        {
            if (memoizedHashCode != 0)
            {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (!internalGetInt().getMap().isEmpty())
            {
                hash = (37 * hash) + INT_FIELD_NUMBER;
                hash = (53 * hash) + internalGetInt().hashCode();
            }
            if (!internalGetStr().getMap().isEmpty())
            {
                hash = (37 * hash) + STR_FIELD_NUMBER;
                hash = (53 * hash) + internalGetStr().hashCode();
            }
            if (!internalGetDou().getMap().isEmpty())
            {
                hash = (37 * hash) + DOU_FIELD_NUMBER;
                hash = (53 * hash) + internalGetDou().hashCode();
            }
            if (!internalGetFlo().getMap().isEmpty())
            {
                hash = (37 * hash) + FLO_FIELD_NUMBER;
                hash = (53 * hash) + internalGetFlo().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static Data.common parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException
        {
            return PARSER.parseFrom(data);
        }

        public static Data.common parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException
        {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Data.common parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException
        {
            return PARSER.parseFrom(data);
        }

        public static Data.common parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException
        {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Data.common parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException
        {
            return PARSER.parseFrom(data);
        }

        public static Data.common parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException
        {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static Data.common parseFrom(java.io.InputStream input)
                throws java.io.IOException
        {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Data.common parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException
        {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Data.common parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException
        {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static Data.common parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException
        {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static Data.common parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException
        {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static Data.common parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException
        {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType()
        {
            return newBuilder();
        }

        public static Builder newBuilder()
        {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(Data.common prototype)
        {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder()
        {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent)
        {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * Protobuf type {@code common}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:common)
                Data.commonOrBuilder
        {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor()
            {
                return Data.internal_static_common_descriptor;
            }

            @SuppressWarnings({"rawtypes"})
            protected com.google.protobuf.MapField internalGetMapField(
                    int number)
            {
                switch (number)
                {
                    case 1:
                        return internalGetInt();
                    case 2:
                        return internalGetStr();
                    case 3:
                        return internalGetDou();
                    case 4:
                        return internalGetFlo();
                    default:
                        throw new RuntimeException(
                                "Invalid map field number: " + number);
                }
            }

            @SuppressWarnings({"rawtypes"})
            protected com.google.protobuf.MapField internalGetMutableMapField(
                    int number)
            {
                switch (number)
                {
                    case 1:
                        return internalGetMutableInt();
                    case 2:
                        return internalGetMutableStr();
                    case 3:
                        return internalGetMutableDou();
                    case 4:
                        return internalGetMutableFlo();
                    default:
                        throw new RuntimeException(
                                "Invalid map field number: " + number);
                }
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable()
            {
                return Data.internal_static_common_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                Data.common.class, Data.common.Builder.class);
            }

            // Construct using Data.common.newBuilder()
            private Builder()
            {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent)
            {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization()
            {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders)
                {
                }
            }

            public Builder clear()
            {
                super.clear();
                internalGetMutableInt().clear();
                internalGetMutableStr().clear();
                internalGetMutableDou().clear();
                internalGetMutableFlo().clear();
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType()
            {
                return Data.internal_static_common_descriptor;
            }

            public Data.common getDefaultInstanceForType()
            {
                return Data.common.getDefaultInstance();
            }

            public Data.common build()
            {
                Data.common result = buildPartial();
                if (!result.isInitialized())
                {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public Data.common buildPartial()
            {
                Data.common result = new Data.common(this);
                int from_bitField0_ = bitField0_;
                result.int_ = internalGetInt();
                result.int_.makeImmutable();
                result.str_ = internalGetStr();
                result.str_.makeImmutable();
                result.dou_ = internalGetDou();
                result.dou_.makeImmutable();
                result.flo_ = internalGetFlo();
                result.flo_.makeImmutable();
                onBuilt();
                return result;
            }

            public Builder clone()
            {
                return (Builder) super.clone();
            }

            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value)
            {
                return (Builder) super.setField(field, value);
            }

            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field)
            {
                return (Builder) super.clearField(field);
            }

            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof)
            {
                return (Builder) super.clearOneof(oneof);
            }

            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value)
            {
                return (Builder) super.setRepeatedField(field, index, value);
            }

            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value)
            {
                return (Builder) super.addRepeatedField(field, value);
            }

            public Builder mergeFrom(com.google.protobuf.Message other)
            {
                if (other instanceof Data.common)
                {
                    return mergeFrom((Data.common) other);
                }
                else
                {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(Data.common other)
            {
                if (other == Data.common.getDefaultInstance()) return this;
                internalGetMutableInt().mergeFrom(
                        other.internalGetInt());
                internalGetMutableStr().mergeFrom(
                        other.internalGetStr());
                internalGetMutableDou().mergeFrom(
                        other.internalGetDou());
                internalGetMutableFlo().mergeFrom(
                        other.internalGetFlo());
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized()
            {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException
            {
                Data.common parsedMessage = null;
                try
                {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                }
                catch (com.google.protobuf.InvalidProtocolBufferException e)
                {
                    parsedMessage = (Data.common) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                }
                finally
                {
                    if (parsedMessage != null)
                    {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private com.google.protobuf.MapField<
                    String, Integer> int_;

            private com.google.protobuf.MapField<String, Integer>
            internalGetInt()
            {
                if (int_ == null)
                {
                    return com.google.protobuf.MapField.emptyMapField(
                            IntDefaultEntryHolder.defaultEntry);
                }
                return int_;
            }

            private com.google.protobuf.MapField<String, Integer>
            internalGetMutableInt()
            {
                onChanged();
                ;
                if (int_ == null)
                {
                    int_ = com.google.protobuf.MapField.newMapField(
                            IntDefaultEntryHolder.defaultEntry);
                }
                if (!int_.isMutable())
                {
                    int_ = int_.copy();
                }
                return int_;
            }

            public int getIntCount()
            {
                return internalGetInt().getMap().size();
            }

            /**
             * <code>map&lt;string, int32&gt; Int = 1;</code>
             */

            public boolean containsInt(
                    String key)
            {
                if (key == null)
                {
                    throw new NullPointerException();
                }
                return internalGetInt().getMap().containsKey(key);
            }

            /**
             * Use {@link #getIntMap()} instead.
             */
            @Deprecated
            public java.util.Map<String, Integer> getInt()
            {
                return getIntMap();
            }

            /**
             * <code>map&lt;string, int32&gt; Int = 1;</code>
             */

            public java.util.Map<String, Integer> getIntMap()
            {
                return internalGetInt().getMap();
            }

            /**
             * <code>map&lt;string, int32&gt; Int = 1;</code>
             */

            public int getIntOrDefault(
                    String key,
                    int defaultValue)
            {
                if (key == null)
                {
                    throw new NullPointerException();
                }
                java.util.Map<String, Integer> map =
                        internalGetInt().getMap();
                return map.containsKey(key) ? map.get(key) : defaultValue;
            }

            /**
             * <code>map&lt;string, int32&gt; Int = 1;</code>
             */

            public int getIntOrThrow(
                    String key)
            {
                if (key == null)
                {
                    throw new NullPointerException();
                }
                java.util.Map<String, Integer> map =
                        internalGetInt().getMap();
                if (!map.containsKey(key))
                {
                    throw new IllegalArgumentException();
                }
                return map.get(key);
            }

            public Builder clearInt()
            {
                internalGetMutableInt().getMutableMap()
                        .clear();
                return this;
            }

            /**
             * <code>map&lt;string, int32&gt; Int = 1;</code>
             */

            public Builder removeInt(
                    String key)
            {
                if (key == null)
                {
                    throw new NullPointerException();
                }
                internalGetMutableInt().getMutableMap()
                        .remove(key);
                return this;
            }

            /**
             * Use alternate mutation accessors instead.
             */
            @Deprecated
            public java.util.Map<String, Integer>
            getMutableInt()
            {
                return internalGetMutableInt().getMutableMap();
            }

            /**
             * <code>map&lt;string, int32&gt; Int = 1;</code>
             */
            public Builder putInt(
                    String key,
                    int value)
            {
                if (key == null)
                {
                    throw new NullPointerException();
                }

                internalGetMutableInt().getMutableMap()
                        .put(key, value);
                return this;
            }

            /**
             * <code>map&lt;string, int32&gt; Int = 1;</code>
             */

            public Builder putAllInt(
                    java.util.Map<String, Integer> values)
            {
                internalGetMutableInt().getMutableMap()
                        .putAll(values);
                return this;
            }

            private com.google.protobuf.MapField<
                    String, String> str_;

            private com.google.protobuf.MapField<String, String>
            internalGetStr()
            {
                if (str_ == null)
                {
                    return com.google.protobuf.MapField.emptyMapField(
                            StrDefaultEntryHolder.defaultEntry);
                }
                return str_;
            }

            private com.google.protobuf.MapField<String, String>
            internalGetMutableStr()
            {
                onChanged();
                ;
                if (str_ == null)
                {
                    str_ = com.google.protobuf.MapField.newMapField(
                            StrDefaultEntryHolder.defaultEntry);
                }
                if (!str_.isMutable())
                {
                    str_ = str_.copy();
                }
                return str_;
            }

            public int getStrCount()
            {
                return internalGetStr().getMap().size();
            }

            /**
             * <code>map&lt;string, string&gt; Str = 2;</code>
             */

            public boolean containsStr(
                    String key)
            {
                if (key == null)
                {
                    throw new NullPointerException();
                }
                return internalGetStr().getMap().containsKey(key);
            }

            /**
             * Use {@link #getStrMap()} instead.
             */
            @Deprecated
            public java.util.Map<String, String> getStr()
            {
                return getStrMap();
            }

            /**
             * <code>map&lt;string, string&gt; Str = 2;</code>
             */

            public java.util.Map<String, String> getStrMap()
            {
                return internalGetStr().getMap();
            }

            /**
             * <code>map&lt;string, string&gt; Str = 2;</code>
             */

            public String getStrOrDefault(
                    String key,
                    String defaultValue)
            {
                if (key == null)
                {
                    throw new NullPointerException();
                }
                java.util.Map<String, String> map =
                        internalGetStr().getMap();
                return map.containsKey(key) ? map.get(key) : defaultValue;
            }

            /**
             * <code>map&lt;string, string&gt; Str = 2;</code>
             */

            public String getStrOrThrow(
                    String key)
            {
                if (key == null)
                {
                    throw new NullPointerException();
                }
                java.util.Map<String, String> map =
                        internalGetStr().getMap();
                if (!map.containsKey(key))
                {
                    throw new IllegalArgumentException();
                }
                return map.get(key);
            }

            public Builder clearStr()
            {
                internalGetMutableStr().getMutableMap()
                        .clear();
                return this;
            }

            /**
             * <code>map&lt;string, string&gt; Str = 2;</code>
             */

            public Builder removeStr(
                    String key)
            {
                if (key == null)
                {
                    throw new NullPointerException();
                }
                internalGetMutableStr().getMutableMap()
                        .remove(key);
                return this;
            }

            /**
             * Use alternate mutation accessors instead.
             */
            @Deprecated
            public java.util.Map<String, String>
            getMutableStr()
            {
                return internalGetMutableStr().getMutableMap();
            }

            /**
             * <code>map&lt;string, string&gt; Str = 2;</code>
             */
            public Builder putStr(
                    String key,
                    String value)
            {
                if (key == null)
                {
                    throw new NullPointerException();
                }
                if (value == null)
                {
                    throw new NullPointerException();
                }
                internalGetMutableStr().getMutableMap()
                        .put(key, value);
                return this;
            }

            /**
             * <code>map&lt;string, string&gt; Str = 2;</code>
             */

            public Builder putAllStr(
                    java.util.Map<String, String> values)
            {
                internalGetMutableStr().getMutableMap()
                        .putAll(values);
                return this;
            }

            private com.google.protobuf.MapField<
                    String, Double> dou_;

            private com.google.protobuf.MapField<String, Double>
            internalGetDou()
            {
                if (dou_ == null)
                {
                    return com.google.protobuf.MapField.emptyMapField(
                            DouDefaultEntryHolder.defaultEntry);
                }
                return dou_;
            }

            private com.google.protobuf.MapField<String, Double>
            internalGetMutableDou()
            {
                onChanged();
                ;
                if (dou_ == null)
                {
                    dou_ = com.google.protobuf.MapField.newMapField(
                            DouDefaultEntryHolder.defaultEntry);
                }
                if (!dou_.isMutable())
                {
                    dou_ = dou_.copy();
                }
                return dou_;
            }

            public int getDouCount()
            {
                return internalGetDou().getMap().size();
            }

            /**
             * <code>map&lt;string, double&gt; Dou = 3;</code>
             */

            public boolean containsDou(
                    String key)
            {
                if (key == null)
                {
                    throw new NullPointerException();
                }
                return internalGetDou().getMap().containsKey(key);
            }

            /**
             * Use {@link #getDouMap()} instead.
             */
            @Deprecated
            public java.util.Map<String, Double> getDou()
            {
                return getDouMap();
            }

            /**
             * <code>map&lt;string, double&gt; Dou = 3;</code>
             */

            public java.util.Map<String, Double> getDouMap()
            {
                return internalGetDou().getMap();
            }

            /**
             * <code>map&lt;string, double&gt; Dou = 3;</code>
             */

            public double getDouOrDefault(
                    String key,
                    double defaultValue)
            {
                if (key == null)
                {
                    throw new NullPointerException();
                }
                java.util.Map<String, Double> map =
                        internalGetDou().getMap();
                return map.containsKey(key) ? map.get(key) : defaultValue;
            }

            /**
             * <code>map&lt;string, double&gt; Dou = 3;</code>
             */

            public double getDouOrThrow(
                    String key)
            {
                if (key == null)
                {
                    throw new NullPointerException();
                }
                java.util.Map<String, Double> map =
                        internalGetDou().getMap();
                if (!map.containsKey(key))
                {
                    throw new IllegalArgumentException();
                }
                return map.get(key);
            }

            public Builder clearDou()
            {
                internalGetMutableDou().getMutableMap()
                        .clear();
                return this;
            }

            /**
             * <code>map&lt;string, double&gt; Dou = 3;</code>
             */

            public Builder removeDou(
                    String key)
            {
                if (key == null)
                {
                    throw new NullPointerException();
                }
                internalGetMutableDou().getMutableMap()
                        .remove(key);
                return this;
            }

            /**
             * Use alternate mutation accessors instead.
             */
            @Deprecated
            public java.util.Map<String, Double>
            getMutableDou()
            {
                return internalGetMutableDou().getMutableMap();
            }

            /**
             * <code>map&lt;string, double&gt; Dou = 3;</code>
             */
            public Builder putDou(
                    String key,
                    double value)
            {
                if (key == null)
                {
                    throw new NullPointerException();
                }

                internalGetMutableDou().getMutableMap()
                        .put(key, value);
                return this;
            }

            /**
             * <code>map&lt;string, double&gt; Dou = 3;</code>
             */

            public Builder putAllDou(
                    java.util.Map<String, Double> values)
            {
                internalGetMutableDou().getMutableMap()
                        .putAll(values);
                return this;
            }

            private com.google.protobuf.MapField<
                    String, Float> flo_;

            private com.google.protobuf.MapField<String, Float>
            internalGetFlo()
            {
                if (flo_ == null)
                {
                    return com.google.protobuf.MapField.emptyMapField(
                            FloDefaultEntryHolder.defaultEntry);
                }
                return flo_;
            }

            private com.google.protobuf.MapField<String, Float>
            internalGetMutableFlo()
            {
                onChanged();
                ;
                if (flo_ == null)
                {
                    flo_ = com.google.protobuf.MapField.newMapField(
                            FloDefaultEntryHolder.defaultEntry);
                }
                if (!flo_.isMutable())
                {
                    flo_ = flo_.copy();
                }
                return flo_;
            }

            public int getFloCount()
            {
                return internalGetFlo().getMap().size();
            }

            /**
             * <code>map&lt;string, float&gt; Flo = 4;</code>
             */

            public boolean containsFlo(
                    String key)
            {
                if (key == null)
                {
                    throw new NullPointerException();
                }
                return internalGetFlo().getMap().containsKey(key);
            }

            /**
             * Use {@link #getFloMap()} instead.
             */
            @Deprecated
            public java.util.Map<String, Float> getFlo()
            {
                return getFloMap();
            }

            /**
             * <code>map&lt;string, float&gt; Flo = 4;</code>
             */

            public java.util.Map<String, Float> getFloMap()
            {
                return internalGetFlo().getMap();
            }

            /**
             * <code>map&lt;string, float&gt; Flo = 4;</code>
             */

            public float getFloOrDefault(
                    String key,
                    float defaultValue)
            {
                if (key == null)
                {
                    throw new NullPointerException();
                }
                java.util.Map<String, Float> map =
                        internalGetFlo().getMap();
                return map.containsKey(key) ? map.get(key) : defaultValue;
            }

            /**
             * <code>map&lt;string, float&gt; Flo = 4;</code>
             */

            public float getFloOrThrow(
                    String key)
            {
                if (key == null)
                {
                    throw new NullPointerException();
                }
                java.util.Map<String, Float> map =
                        internalGetFlo().getMap();
                if (!map.containsKey(key))
                {
                    throw new IllegalArgumentException();
                }
                return map.get(key);
            }

            public Builder clearFlo()
            {
                internalGetMutableFlo().getMutableMap()
                        .clear();
                return this;
            }

            /**
             * <code>map&lt;string, float&gt; Flo = 4;</code>
             */

            public Builder removeFlo(
                    String key)
            {
                if (key == null)
                {
                    throw new NullPointerException();
                }
                internalGetMutableFlo().getMutableMap()
                        .remove(key);
                return this;
            }

            /**
             * Use alternate mutation accessors instead.
             */
            @Deprecated
            public java.util.Map<String, Float>
            getMutableFlo()
            {
                return internalGetMutableFlo().getMutableMap();
            }

            /**
             * <code>map&lt;string, float&gt; Flo = 4;</code>
             */
            public Builder putFlo(
                    String key,
                    float value)
            {
                if (key == null)
                {
                    throw new NullPointerException();
                }

                internalGetMutableFlo().getMutableMap()
                        .put(key, value);
                return this;
            }

            /**
             * <code>map&lt;string, float&gt; Flo = 4;</code>
             */

            public Builder putAllFlo(
                    java.util.Map<String, Float> values)
            {
                internalGetMutableFlo().getMutableMap()
                        .putAll(values);
                return this;
            }

            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields)
            {
                return super.setUnknownFieldsProto3(unknownFields);
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields)
            {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:common)
        }

        // @@protoc_insertion_point(class_scope:common)
        private static final Data.common DEFAULT_INSTANCE;

        static
        {
            DEFAULT_INSTANCE = new Data.common();
        }

        public static Data.common getDefaultInstance()
        {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<common>
                PARSER = new com.google.protobuf.AbstractParser<common>()
        {
            public common parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException
            {
                return new common(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<common> parser()
        {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<common> getParserForType()
        {
            return PARSER;
        }

        public Data.common getDefaultInstanceForType()
        {
            return DEFAULT_INSTANCE;
        }

    }

    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_position_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_position_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_common_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_common_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_common_IntEntry_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_common_IntEntry_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_common_StrEntry_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_common_StrEntry_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_common_DouEntry_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_common_DouEntry_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_common_FloEntry_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_common_FloEntry_fieldAccessorTable;

    public static com.google.protobuf.Descriptors.FileDescriptor
    getDescriptor()
    {
        return descriptor;
    }

    private static com.google.protobuf.Descriptors.FileDescriptor
            descriptor;

    static
    {
        String[] descriptorData = {
                "\n\ndata.proto\"3\n\010position\022\n\n\002id\030\001 \001(\005\022\014\n\004" +
                        "name\030\002 \001(\t\022\r\n\005power\030\003 \001(\t\"\264\002\n\006common\022\035\n\003" +
                        "Int\030\001 \003(\0132\020.common.IntEntry\022\035\n\003Str\030\002 \003(\013" +
                        "2\020.common.StrEntry\022\035\n\003Dou\030\003 \003(\0132\020.common" +
                        ".DouEntry\022\035\n\003Flo\030\004 \003(\0132\020.common.FloEntry" +
                        "\032*\n\010IntEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\005" +
                        ":\0028\001\032*\n\010StrEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002" +
                        " \001(\t:\0028\001\032*\n\010DouEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005val" +
                        "ue\030\002 \001(\001:\0028\001\032*\n\010FloEntry\022\013\n\003key\030\001 \001(\t\022\r\n" +
                        "\005value\030\002 \001(\002:\0028\001b\006proto3"
        };
        com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
                new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner()
                {
                    public com.google.protobuf.ExtensionRegistry assignDescriptors(
                            com.google.protobuf.Descriptors.FileDescriptor root)
                    {
                        descriptor = root;
                        return null;
                    }
                };
        com.google.protobuf.Descriptors.FileDescriptor
                .internalBuildGeneratedFileFrom(descriptorData,
                        new com.google.protobuf.Descriptors.FileDescriptor[]{
                        }, assigner);
        internal_static_position_descriptor =
                getDescriptor().getMessageTypes().get(0);
        internal_static_position_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_position_descriptor,
                new String[]{"Id", "Name", "Power",});
        internal_static_common_descriptor =
                getDescriptor().getMessageTypes().get(1);
        internal_static_common_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_common_descriptor,
                new String[]{"Int", "Str", "Dou", "Flo",});
        internal_static_common_IntEntry_descriptor =
                internal_static_common_descriptor.getNestedTypes().get(0);
        internal_static_common_IntEntry_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_common_IntEntry_descriptor,
                new String[]{"Key", "Value",});
        internal_static_common_StrEntry_descriptor =
                internal_static_common_descriptor.getNestedTypes().get(1);
        internal_static_common_StrEntry_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_common_StrEntry_descriptor,
                new String[]{"Key", "Value",});
        internal_static_common_DouEntry_descriptor =
                internal_static_common_descriptor.getNestedTypes().get(2);
        internal_static_common_DouEntry_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_common_DouEntry_descriptor,
                new String[]{"Key", "Value",});
        internal_static_common_FloEntry_descriptor =
                internal_static_common_descriptor.getNestedTypes().get(3);
        internal_static_common_FloEntry_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_common_FloEntry_descriptor,
                new String[]{"Key", "Value",});
    }

    // @@protoc_insertion_point(outer_class_scope)
}
